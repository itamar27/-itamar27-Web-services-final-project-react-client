[{"C:\\Users\\user\\Desktop\\Itamar\\GitHub\\Web-services-final-project\\Web-services-final-project-react-client\\freelancer-app\\src\\index.js":"1","C:\\Users\\user\\Desktop\\Itamar\\GitHub\\Web-services-final-project\\Web-services-final-project-react-client\\freelancer-app\\src\\reportWebVitals.js":"2","C:\\Users\\user\\Desktop\\Itamar\\GitHub\\Web-services-final-project\\Web-services-final-project-react-client\\freelancer-app\\src\\components\\mainApp.js":"3","C:\\Users\\user\\Desktop\\Itamar\\GitHub\\Web-services-final-project\\Web-services-final-project-react-client\\freelancer-app\\src\\components\\footer.js":"4","C:\\Users\\user\\Desktop\\Itamar\\GitHub\\Web-services-final-project\\Web-services-final-project-react-client\\freelancer-app\\src\\components\\navbar.js":"5","C:\\Users\\user\\Desktop\\Itamar\\GitHub\\Web-services-final-project\\Web-services-final-project-react-client\\freelancer-app\\src\\userContext.js":"6","C:\\Users\\user\\Desktop\\Itamar\\GitHub\\Web-services-final-project\\Web-services-final-project-react-client\\freelancer-app\\src\\Router\\router.js":"7","C:\\Users\\user\\Desktop\\Itamar\\GitHub\\Web-services-final-project\\Web-services-final-project-react-client\\freelancer-app\\src\\components\\SignUp\\signUp.js":"8","C:\\Users\\user\\Desktop\\Itamar\\GitHub\\Web-services-final-project\\Web-services-final-project-react-client\\freelancer-app\\src\\components\\SignUp\\signIn.js":"9","C:\\Users\\user\\Desktop\\Itamar\\GitHub\\Web-services-final-project\\Web-services-final-project-react-client\\freelancer-app\\src\\components\\user\\userPage.js":"10","C:\\Users\\user\\Desktop\\Itamar\\GitHub\\Web-services-final-project\\Web-services-final-project-react-client\\freelancer-app\\src\\constants.js":"11","C:\\Users\\user\\Desktop\\Itamar\\GitHub\\Web-services-final-project\\Web-services-final-project-react-client\\freelancer-app\\src\\components\\SignUp\\personalDetails.js":"12","C:\\Users\\user\\Desktop\\Itamar\\GitHub\\Web-services-final-project\\Web-services-final-project-react-client\\freelancer-app\\src\\components\\SignUp\\customerDetailsInputs.js":"13","C:\\Users\\user\\Desktop\\Itamar\\GitHub\\Web-services-final-project\\Web-services-final-project-react-client\\freelancer-app\\src\\components\\SignUp\\freelancerDetailsInputs.js":"14","C:\\Users\\user\\Desktop\\Itamar\\GitHub\\Web-services-final-project\\Web-services-final-project-react-client\\freelancer-app\\src\\components\\jobs\\jobsList.js":"15","C:\\Users\\user\\Desktop\\Itamar\\GitHub\\Web-services-final-project\\Web-services-final-project-react-client\\freelancer-app\\src\\components\\jobs\\job.js":"16"},{"size":634,"mtime":1613409317723,"results":"17","hashOfConfig":"18"},{"size":375,"mtime":1612450537609,"results":"19","hashOfConfig":"18"},{"size":756,"mtime":1613423620004,"results":"20","hashOfConfig":"18"},{"size":522,"mtime":1612804245648,"results":"21","hashOfConfig":"18"},{"size":3321,"mtime":1613409721988,"results":"22","hashOfConfig":"18"},{"size":92,"mtime":1613410613685,"results":"23","hashOfConfig":"18"},{"size":1236,"mtime":1613425717309,"results":"24","hashOfConfig":"18"},{"size":6818,"mtime":1613419903858,"results":"25","hashOfConfig":"18"},{"size":3839,"mtime":1613413721072,"results":"26","hashOfConfig":"18"},{"size":2743,"mtime":1613421664337,"results":"27","hashOfConfig":"18"},{"size":66,"mtime":1612706129690,"results":"28","hashOfConfig":"18"},{"size":3522,"mtime":1612716050355,"results":"29","hashOfConfig":"18"},{"size":1236,"mtime":1612530605688,"results":"30","hashOfConfig":"18"},{"size":2887,"mtime":1612776477032,"results":"31","hashOfConfig":"18"},{"size":1119,"mtime":1613416971349,"results":"32","hashOfConfig":"18"},{"size":5295,"mtime":1613421757168,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1cscxxa",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\user\\Desktop\\Itamar\\GitHub\\Web-services-final-project\\Web-services-final-project-react-client\\freelancer-app\\src\\index.js",[],["71","72"],"C:\\Users\\user\\Desktop\\Itamar\\GitHub\\Web-services-final-project\\Web-services-final-project-react-client\\freelancer-app\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\Itamar\\GitHub\\Web-services-final-project\\Web-services-final-project-react-client\\freelancer-app\\src\\components\\mainApp.js",["73"],"C:\\Users\\user\\Desktop\\Itamar\\GitHub\\Web-services-final-project\\Web-services-final-project-react-client\\freelancer-app\\src\\components\\footer.js",[],"C:\\Users\\user\\Desktop\\Itamar\\GitHub\\Web-services-final-project\\Web-services-final-project-react-client\\freelancer-app\\src\\components\\navbar.js",["74"],"import React, { useState, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport { Link } from 'react-router-dom';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nimport { UserContext } from '.././userContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: '#B3E3F8',\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    icon: {\r\n        color: 'grey',\r\n        textDecoration: 'none'\r\n    }\r\n}));\r\n\r\nconst NavBar = (props) => {\r\n    const classes = useStyles();\r\n    const { user, setUser } = useContext(UserContext);\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div className={ classes.root }>\r\n            <AppBar position=\"static\" className={ classes.root }>\r\n                <Toolbar>\r\n\r\n                    <Typography variant=\"h6\" className={ classes.title }>\r\n\r\n                        <Link to='/' className={ classes.icon }>Workflows</Link>\r\n                    </Typography>\r\n                    {user && (\r\n                        <div>\r\n                            <IconButton\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls=\"menu-appbar\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleMenu}\r\n                                color=\"inherit\"\r\n                            >\r\n                                <AccountCircle className={classes.icon} />\r\n                            </IconButton>\r\n                            <Menu\r\n                                id=\"menu-appbar\"\r\n                                anchorEl={anchorEl}\r\n                                anchorOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                keepMounted\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                open={open}\r\n                                onClose={handleClose}\r\n                            >\r\n                                <MenuItem onClick={handleClose}><Link to={`/user/${user.first_name}`} className={classes.icon}>My account</Link></MenuItem>\r\n                                <MenuItem onClick={handleClose}><Link to='/' >Logout</Link></MenuItem>\r\n                            </Menu>\r\n                        </div>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n};\r\nexport default NavBar;","C:\\Users\\user\\Desktop\\Itamar\\GitHub\\Web-services-final-project\\Web-services-final-project-react-client\\freelancer-app\\src\\userContext.js",[],"C:\\Users\\user\\Desktop\\Itamar\\GitHub\\Web-services-final-project\\Web-services-final-project-react-client\\freelancer-app\\src\\Router\\router.js",["75","76","77","78"],"C:\\Users\\user\\Desktop\\Itamar\\GitHub\\Web-services-final-project\\Web-services-final-project-react-client\\freelancer-app\\src\\components\\SignUp\\signUp.js",[],"C:\\Users\\user\\Desktop\\Itamar\\GitHub\\Web-services-final-project\\Web-services-final-project-react-client\\freelancer-app\\src\\components\\SignUp\\signIn.js",[],"C:\\Users\\user\\Desktop\\Itamar\\GitHub\\Web-services-final-project\\Web-services-final-project-react-client\\freelancer-app\\src\\components\\user\\userPage.js",["79","80","81"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport { URL } from '../../constants';\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { UserContext } from '../../userContext';\r\nimport axios from 'axios'\r\nimport JobList from '../jobs/jobsList'\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n        width: '100%',\r\n        boxShadow: 'none',\r\n    },\r\n    title: {\r\n        fontFamily: 'Roboto',\r\n        fontWeight: '500',\r\n        color: '#3b1687',\r\n\r\n    },\r\n\r\n\r\n});\r\n\r\n\r\nexport default function UserPage(props) {\r\n    const [jobOffers, setJobOffers] = useState(null);\r\n    const [activeJobs, setActiveJobs] = useState(null);\r\n    const { user, setUser } = useContext(UserContext);\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    useEffect(() => {\r\n        // axios.get(`http://localhost:3000/api/jobs/${user.id}`, { withCredentials: true, credentials: 'include' })\r\n        //     .then((response) => {\r\n        //         setActiveJobs(response.data)\r\n        //         console.log(response.data);\r\n        //     })\r\n        //     .catch((err) => {\r\n        //         console.log(\"ERROR WITH GET ACTIVE JOBS\")\r\n        //     })\r\n\r\n        getJobOffers();\r\n    }, []);\r\n\r\n    const getJobOffers = () => {\r\n        axios.get(`http://localhost:3000/api/freelancerApi/projects/user`, { withCredentials: true, credentials: 'include' })\r\n            .then((response) => {\r\n                setJobOffers(response.data)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n\r\n    }\r\n    \r\n    const handleCommentChange = (event, id) => {\r\n\r\n        const index = jobOffers.findIndex(offer => offer.project_id === id);\r\n        let newJobOffers = [...jobOffers];\r\n        newJobOffers[index]['comment'] = event.target.value;\r\n        setJobOffers(newJobOffers);\r\n    }\r\n\r\n    const saveComment = (id, value) => {\r\n\r\n        console.log(id, value);\r\n        axios.put(URL + `api/comments/${id}`, { comment: value }, { withCredentials: true, credentials: 'include' })\r\n            .then(response => {\r\n                console.log(response);\r\n                console.log('here');\r\n            })\r\n            .catch(err => {\r\n                console.log('not here');\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.container}>\r\n            <h1 className={classes.title}>{user.first_name} welcome back!</h1>\r\n            { jobOffers ? <JobList jobs={jobOffers} editComment={handleCommentChange} saveComment={saveComment} user={user} /> : null}\r\n        </Paper >\r\n    )\r\n}","C:\\Users\\user\\Desktop\\Itamar\\GitHub\\Web-services-final-project\\Web-services-final-project-react-client\\freelancer-app\\src\\constants.js",[],"C:\\Users\\user\\Desktop\\Itamar\\GitHub\\Web-services-final-project\\Web-services-final-project-react-client\\freelancer-app\\src\\components\\SignUp\\personalDetails.js",["82","83","84"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(15),\r\n        width: '30vw',\r\n        maxHeight: '40vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    form: {\r\n        height: '50vh',\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        height: '5vh',\r\n        margin: theme.spacing(3, 0, 2),\r\n        backgroundColor: '#609EFA',\r\n    },\r\n    divider: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function PersonalDetails(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const { firstName, lastName, country, city, streetNumber, appt } = props.values;\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        autoComplete=\"fname\"\r\n                        name=\"firstName\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"firstName\"\r\n                        label=\"First Name\"\r\n                        autoFocus\r\n                        onChange={props.handleChange('firstName')}\r\n                        defaultValue={firstName}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"lastName\"\r\n                        label=\"Last Name\"\r\n                        name=\"lastName\"\r\n                        autoComplete=\"lname\"\r\n                        onChange={props.handleChange('lastName')}\r\n                        defaultValue={lastName}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        id=\"facebook\"\r\n                        label=\"facebook\"\r\n                        name=\"facebook\"\r\n                        onChange={props.handleChange('facebook')}\r\n                        defaultValue={appt}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        id=\"instgram\"\r\n                        label=\"instgram\"\r\n                        name=\"instgram\"\r\n                        onChange={props.handleChange('instgram')}\r\n                        defaultValue={appt}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        id=\"linkedin\"\r\n                        label=\"linkedin\"\r\n                        name=\"linkedin\"\r\n                        onChange={props.handleChange('linkedin')}\r\n                        defaultValue={appt}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <Divider variant=\"fullWidth\" className={classes.divider} />\r\n        </>\r\n    )\r\n}","C:\\Users\\user\\Desktop\\Itamar\\GitHub\\Web-services-final-project\\Web-services-final-project-react-client\\freelancer-app\\src\\components\\SignUp\\customerDetailsInputs.js",[],"C:\\Users\\user\\Desktop\\Itamar\\GitHub\\Web-services-final-project\\Web-services-final-project-react-client\\freelancer-app\\src\\components\\SignUp\\freelancerDetailsInputs.js",[],"C:\\Users\\user\\Desktop\\Itamar\\GitHub\\Web-services-final-project\\Web-services-final-project-react-client\\freelancer-app\\src\\components\\jobs\\jobsList.js",["85"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport React, { useState } from \"react\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Job from \"./job\"\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        marginTop: 20,\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n        width: '100%',\r\n        boxShadow: 'none',\r\n    },\r\n\r\n\r\n});\r\n\r\n\r\nexport default function JobsList(props) {\r\n    const classes = useStyles();\r\n\r\n    const eachJob = (job, i) => {\r\n        return (\r\n            <Job\r\n                key={ i }\r\n                id = {job.project_id}\r\n                title={ job.title }\r\n                description={ job.description }\r\n                comments={ job.comment }\r\n                price={ job.price }\r\n                role={ props.user.role }\r\n                editComment = {props.editComment}\r\n                saveComment = {props.saveComment}\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Paper className={ classes.container }>\r\n            {props.jobs ? props.jobs.map(eachJob) : null }\r\n        </Paper >\r\n    )\r\n}","C:\\Users\\user\\Desktop\\Itamar\\GitHub\\Web-services-final-project\\Web-services-final-project-react-client\\freelancer-app\\src\\components\\jobs\\job.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":6,"column":8,"nodeType":"92","messageId":"93","endLine":6,"endColumn":13},{"ruleId":"90","severity":1,"message":"94","line":33,"column":19,"nodeType":"92","messageId":"93","endLine":33,"endColumn":26},{"ruleId":"90","severity":1,"message":"95","line":1,"column":10,"nodeType":"92","messageId":"93","endLine":1,"endColumn":20},{"ruleId":"90","severity":1,"message":"96","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":21},{"ruleId":"90","severity":1,"message":"97","line":7,"column":10,"nodeType":"92","messageId":"93","endLine":7,"endColumn":13},{"ruleId":"90","severity":1,"message":"91","line":8,"column":8,"nodeType":"92","messageId":"93","endLine":8,"endColumn":13},{"ruleId":"90","severity":1,"message":"98","line":30,"column":12,"nodeType":"92","messageId":"93","endLine":30,"endColumn":22},{"ruleId":"90","severity":1,"message":"99","line":30,"column":24,"nodeType":"92","messageId":"93","endLine":30,"endColumn":37},{"ruleId":"90","severity":1,"message":"94","line":31,"column":19,"nodeType":"92","messageId":"93","endLine":31,"endColumn":26},{"ruleId":"90","severity":1,"message":"100","line":37,"column":34,"nodeType":"92","messageId":"93","endLine":37,"endColumn":41},{"ruleId":"90","severity":1,"message":"101","line":37,"column":43,"nodeType":"92","messageId":"93","endLine":37,"endColumn":47},{"ruleId":"90","severity":1,"message":"102","line":37,"column":49,"nodeType":"92","messageId":"93","endLine":37,"endColumn":61},{"ruleId":"90","severity":1,"message":"103","line":2,"column":17,"nodeType":"92","messageId":"93","endLine":2,"endColumn":25},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'setUser' is assigned a value but never used.","'useContext' is defined but never used.","'UserContext' is defined but never used.","'URL' is defined but never used.","'activeJobs' is assigned a value but never used.","'setActiveJobs' is assigned a value but never used.","'country' is assigned a value but never used.","'city' is assigned a value but never used.","'streetNumber' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]